<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.example.sample.library.service.impl.BookMapper">
	<resultMap id="book"
		type="egovframework.example.sample.library.service.BookVO">
		<id property="bookId" column="book_id" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="publisher" column="publisher" />
		<result property="totalQuantity" column="total_quantity" />
		<result property="currentQuantity" column="current_quantity" />
	</resultMap>

	<resultMap id="bookWithLoanInfo"
		type="egovframework.example.sample.library.service.BookVO">
		<id property="bookId" column="book_id" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="publisher" column="publisher" />
		<result property="totalQuantity" column="total_quantity" />
		<result property="currentQuantity" column="current_quantity" />
		<result property="loanDate" column="loan_date" />
		<result property="returnDate" column="return_date" />
		<result property="memberId" column="member_id" />
	</resultMap>


	<select id="countAllBooks" parameterType="bookVO"
		resultType="int">
		SELECT count(*)
		FROM book
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				(title LIKE CONCAT('%', #{searchKeyword}, '%')
				OR author
				LIKE CONCAT('%', #{searchKeyword}, '%'))
			</if>
			AND management_status = 'ACTIVE'
		</where>
	</select>

	<select id="selectBookList" parameterType="bookVO"
		resultMap="book">
		SELECT
		book_id, title, author, publisher, total_quantity,
		current_quantity
		FROM book
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				(title LIKE CONCAT('%', #{searchKeyword}, '%')
				OR author
				LIKE CONCAT('%', #{searchKeyword}, '%'))
			</if>
			AND management_status = 'ACTIVE'
		</where>
		ORDER BY book_id DESC
		LIMIT #{firstIndex}, #{recordCountPerPage}
	</select>

	<select id="selectBookById" parameterType="int" resultMap="book">
		SELECT
		book_id, title, author, publisher,
		total_quantity,
		current_quantity
		FROM book
		WHERE book_id = #{bookId}
	</select>

	<select id="countMyLoans" parameterType="bookVO"
		resultType="int">
		SELECT
		COUNT(*)
		FROM book b
		JOIN loan l ON b.book_id = l.book_id
		<where>
			l.member_id = #{memberId} AND l.status = 'loaned'
			<if test="searchKeyword != null and searchKeyword != ''">
				AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
				OR
				b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
			</if>
		</where>
	</select>

	<select id="selectMyLoans" parameterType="bookVO"
		resultMap="bookWithLoanInfo">
		SELECT
		b.book_id, b.title, b.author, b.publisher, b.total_quantity,
		b.current_quantity,
		l.loan_date
		FROM book b
		JOIN loan l ON b.book_id =
		l.book_id
		WHERE l.member_id = #{memberId} AND l.status = 'loaned'
		<if test="searchKeyword != null and searchKeyword != ''">
			AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
			OR
			b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
		ORDER BY l.loan_date DESC
		LIMIT #{firstIndex}, #{recordCountPerPage}
	</select>

	<select id="countLoanList" parameterType="bookVO"
		resultType="int">
		SELECT
		COUNT(*)
		FROM loan l
		JOIN book b ON l.book_id = b.book_id
		<where>
			l.member_id = #{memberId}
			<if test="searchKeyword != null and searchKeyword != ''">
				AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
				OR
				b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
			</if>
		</where>
	</select>

	<select id="selectLoanList" parameterType="bookVO"
		resultMap="bookWithLoanInfo">
		SELECT
		b.book_id,
		b.title,
		b.author,
		b.publisher,
		b.total_quantity,
		b.current_quantity,
		l.loan_date,
		l.return_date,
		l.status
		FROM book b
		JOIN
		loan l ON b.book_id = l.book_id
		where l.member_id = #{memberId}
		<if test="searchKeyword != null and searchKeyword != ''">
			AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
			OR
			b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
		ORDER BY loan_date DESC
		LIMIT #{firstIndex}, #{recordCountPerPage}
	</select>

	<insert id="insertBook" parameterType="bookVO"
		useGeneratedKeys="true" keyProperty="bookId">
		INSERT INTO book (title, author,
		publisher, total_quantity, current_quantity)
		VALUES (#{title},
		#{author}, #{publisher},
		#{totalQuantity}, #{currentQuantity})
	</insert>

	<update id="updateBook" parameterType="bookVO">
		UPDATE book
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="author != null">
				author = #{author},
			</if>
			<if test="publisher != null">
				publisher = #{publisher},
			</if>
			<if test="totalQuantity != null">
				total_quantity = #{totalQuantity},
			</if>
			<if test="currentQuantity != null">
				current_quantity = #{currentQuantity},
			</if>
		</set>
		WHERE book_id = #{bookId}
	</update>

	<update id="returnBook">
		UPDATE loan SET status =
		'returned', return_date =
		NOW()
		WHERE
		book_id =
		#{bookId} AND member_id
		= #{memberId} AND
		status =
		'loaned'
	</update>

	<update id="deleteBook" parameterType="int">
		UPDATE book SET
		management_status = 'REMOVED'
		where book_id = #{bookId}
	</update>

	<insert id="insertLoan">
		INSERT INTO
		loan(member_id, book_id,
		loan_date, status)
		VALUES(#{memberId},
		#{bookId}, NOW(), 'loaned')
	</insert>

	<update id="increaseBookQuantity">
		UPDATE book
		SET current_quantity = current_quantity +
		1
		WHERE book_id = #{bookId}
	</update>

	<update id="decreaseBookQuantity">
		UPDATE book
		SET current_quantity = current_quantity -
		1
		WHERE book_id = #{bookId} AND current_quantity > 0
	</update>

	<select id="findBookByTitleAndAuthor" parameterType="bookVO"
		resultMap="book">
		SELECT *
		FROM book
		WHERE TRIM(title) = TRIM(#{title} )
		AND
		TRIM(author) = TRIM(#{author})
		AND management_status = 'ACTIVE'
	</select>

	<update id="increaseBookStock" parameterType="bookVO">
		UPDATE
		book SET total_quantity = total_quantity + #{totalQuantity},
		current_quantity = current_quantity + #{totalQuantity}
		WHERE book_id =
		#{bookId}
	</update>

	<select id="selectOverdueLoans" resultMap="bookWithLoanInfo">
		SELECT
		l.book_id,
		l.member_id
		FROM
		loan l
		WHERE
		l.status = 'loaned'
		AND
		l.loan_date &lt; DATE_SUB(NOW(), INTERVAL 10 DAY)
	</select>

</mapper>