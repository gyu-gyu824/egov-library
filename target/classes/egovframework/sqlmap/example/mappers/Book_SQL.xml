<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.example.sample.library.service.impl.BookMapper">
	<resultMap id="book"
		type="egovframework.example.sample.library.service.BookVO">
		<id property="bookId" column="book_id" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="publisher" column="publisher" />
		<result property="status" column="status" />
	</resultMap>

	<resultMap id="bookWithLoanInfo"
		type="egovframework.example.sample.library.service.BookVO">
		<id property="bookId" column="book_id" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="publisher" column="publisher" />
		<result property="status" column="status" />
		<result property="loanDate" column="loan_date" />
		<result property="returnDate" column="return_date" />
		<result property="memberId" column="member_id" />
	</resultMap>

	<select id="countAllBooks" parameterType="bookVO"
		resultType="int">
		SELECT
		COUNT(*)
		FROM book
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				(title LIKE CONCAT('%', #{searchKeyword}, '%')
				OR author
				LIKE CONCAT('%', #{searchKeyword}, '%'))
			</if>
			AND management_status = 'ACTIVE'
		</where>
	</select>

	<select id="selectBookList" parameterType="bookVO"
		resultMap="book">
		SELECT
		book_id, title, author, publisher, status
		FROM book
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				(title LIKE CONCAT('%', #{searchKeyword}, '%')
				OR author
				LIKE CONCAT('%', #{searchKeyword}, '%'))
			</if>
			AND management_status = 'ACTIVE'
		</where>
		ORDER BY book_id DESC
		LIMIT #{pageStart}, #{perPageNum}
	</select>

	<select id="selectBookById" parameterType="int" resultMap="book">
		SELECT * FROM book WHERE book_id = #{bookId}
	</select>

	<select id="countMyLoans" parameterType="bookVO" resultType="int">
		SELECT count(*)
		FROM book b
		JOIN loan l on b.book_id = l.book_id
		where
		l.member_id = #{memberId} AND l.status = 'loaned'
		<if test="searchKeyword != null and searchKeyword != ''">
			AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
			OR
			b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
	</select>

	<select id="selectMyLoans" parameterType="BookVO"
		resultMap="bookWithLoanInfo">
		SELECT
		b.book_id, b.title, b.author, b.publisher, b.status,
		l.loan_date, l.return_date
		FROM book b
		JOIN loan l ON b.book_id =
		l.book_id
		WHERE l.member_id = #{memberId} AND l.status = 'loaned'
		<if test="searchKeyword != null and searchKeyword != ''">
			AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
			OR
			b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
		ORDER BY l.loan_date DESC
		LIMIT #{pageStart}, #{perPageNum}
	</select>

	<select id="countLoanList" parameterType="BookVO"
		resultType="int">
		SELECT COUNT(*)
		FROM book b
		JOIN loan l on b.book_id = l.book_id
		where
		l.member_id = #{memberId}
		<if test="searchKeyword != null and searchKeyword != ''">
			AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
			OR
			b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
	</select>

	<select id="selectLoanList" parameterType="BookVO"
		resultMap="bookWithLoanInfo">
		SELECT
		b.book_id,
		b.title,
		b.author,
		b.publisher,
		l.loan_date,
		l.return_date,
		l.status
		FROM book b
		JOIN loan l ON b.book_id = l.book_id
		where l.member_id = #{memberId}
		<if test="searchKeyword != null and searchKeyword != ''">
			AND (b.title LIKE CONCAT('%', #{searchKeyword}, '%')
			OR b.author LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
		ORDER BY loan_date DESC
		LIMIT
		#{pageStart}, #{perPageNum}
	</select>

	<insert id="insertBook" parameterType="bookVO"
		useGeneratedKeys="true" keyProperty="bookId">
		INSERT INTO book (title, author,
		publisher, status)
		VALUES (#{title}, #{author}, #{publisher},
		#{status})
	</insert>

	<update id="updateBook" parameterType="bookVO">
		UPDATE book
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="author != null">
				author = #{author},
			</if>
			<if test="publisher != null">
				publisher = #{publisher},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
		</set>
		WHERE title = #{title}
	</update>

	<update id="returnBook">
		UPDATE loan SET status =
		'returned', return_date =
		NOW()
		WHERE
		book_id =
		#{bookId} AND member_id
		= #{memberId} AND
		status =
		'loaned'
	</update>

	<update id="availableBook" parameterType="int">
		UPDATE book SET status
		= 'available'
		where book_id = #{bookId} and
		status = 'unavailable'
	</update>

	<update id="deleteBook" parameterType="int">
		UPDATE book SET
		management_status = 'REMOVED'
		where book_id = #{bookId}
	</update>

	<insert id="insertLoan">
		INSERT INTO
		loan(member_id, book_id,
		loan_date, status)
		VALUES(#{memberId},
		#{bookId}, NOW(), 'loaned')
	</insert>

	<update id="modifyStatusBook" parameterType="int">
		UPDATE book SET
		status = 'unavailable'
		where book_id = #{bookId} and status =
		'available'
	</update>

</mapper>